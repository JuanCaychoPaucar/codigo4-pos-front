{"version":3,"sources":["modules/auth/context/AuthContext.js","RutaPrivada.js","modules/admin/components/AdminHeader.js","modules/admin/screens/dashboard/AdminDashboardScreen.js","modules/admin/screens/pedidos/AdminPedidosScreen.js","environments/environments.js","services/platosServices.js","services/categoriasServices.js","modules/admin/screens/platos/components/AdminPlatosForm.js","modules/admin/screens/platos/components/AdminPlatosTabla.js","modules/admin/screens/platos/AdminPlatosScreen.js","modules/admin/AdminRouter.js","services/authServices.js","modules/auth/screens/login/AuthLoginScreen.js","modules/auth/AuthRouter.js","modules/invitado/screens/home/InvitadoHomeScreen.js","modules/invitado/InvitadoRouter.js","modules/pos/context/mesa/MesaContext.js","modules/pos/components/PosCategorias.js","modules/pos/components/PosComandaItem.js","modules/pos/components/PosComanda.js","assets/img/logo.svg","assets/img/search.svg","modules/pos/components/PosHeader.js","services/mesasServices.js","modules/pos/components/PosMesa.js","modules/pos/components/PosMesas.js","assets/img/plato_blanco.svg","modules/pos/components/PosNavigation.js","modules/pos/components/PosPlato.js","modules/pos/components/PosPlatos.js","modules/pos/screens/control/PosControlScreen.js","modules/pos/context/mesa/MesaReducer.js","services/pedidosServices.js","modules/pos/context/mesa/MesaState.js","modules/pos/PosRouter.js","AppRouter.js","modules/auth/context/AuthReducer.js","modules/auth/context/AuthState.js","App.js","index.js"],"names":["AuthContext","createContext","RutaPrivada","path","Componente","componente","useContext","autenticado","cargando","className","component","to","AdminHeader","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","AdminDashboardScreen","AdminPedidosScreen","URL_BACKEND","getPlatos","a","fetch","peticion","json","data","postPlatoSinImagen","objPlato","method","headers","body","JSON","stringify","postImagenByPlatoId","plato_id","archivo","formData","FormData","append","getCategorias","getPlatosByCategoriaId","categoria_id","formularioVacio","plato_nom","plato_pre","AdminPlatosForm","traerPlatos","useState","formulario","setFormulario","categorias","setCategorias","archivoRef","useRef","traerCategorias","ok","content","handleChange","e","target","name","value","useEffect","onSubmit","preventDefault","Swal","fire","title","text","icon","showConfirmButton","allowOutsideClick","plato_img","then","current","files","rpta","timer","htmlFor","onChange","map","categoria","categoria_nom","ref","AdminPlatosTabla","platos","plato","src","alt","width","Categorium","AdminPlatosScreen","setPlatos","AdminRouter","postLogin","correo","password","verificarToken","token","AuthLoginScreen","history","iniciarSesion","push","AuthRouter","InvitadoHomeScreen","style","minHeight","display","justifyContent","alignItems","flexDirection","InvitadoRouter","exact","MesaContext","PosCategorias","setCargando","globalObjCategoria","seleccionarCategoriaGlobal","objCategoria","onClick","PosComandaItem","plato_cant","PosComanda","pedidoActual","globalPedidos","globalObjMesa","globalPagar","find","pedido","mesa_id","showCancelButton","isConfirmed","withRouter","usu_nom","cerrarSesion","logoSVG","searchSVG","replace","getMesas","PosMesa","objMesa","seleccionarMesaGlobal","mesa_nro","PosMesas","mesas","setMesas","traerMesas","PosNavigation","platoSVG","PosPlato","agregarPlato","restarPlato","PosPlatos","traerPlatosPorCategoriaId","Platos","PosControlScreen","MesaReducer","stateActual","action","postPedido","objPedido","MesaState","props","useReducer","state","dispatch","Provider","nuevoGlobalPedidos","total","filter","length","pedidoPlatos","pedidoplato_cant","usu_id","pedido_est","pedido_nro","pedido_fech","moment","format","pedidoplatos","console","log","children","PosRouter","AppRouter","basename","AuthReducer","AuthState","localStorage","getItem","payload","split","payloadDesencriptado","window","atob","payloadJSON","parse","iniciarSesionConLocalStorage","setItem","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8dc12e3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AuthContext from './modules/auth/context/AuthContext';\r\n\r\nconst RutaPrivada = ({ path, componente: Componente }) => {\r\n\r\n    const { autenticado, cargando } = useContext(AuthContext);\r\n\r\n    return (\r\n        cargando ?\r\n            <h1 className=\"display-4\">Cargando...</h1> :\r\n            autenticado ?\r\n                <Route path={path} component={Componente} /> :\r\n                <Redirect to={\"/\"} />\r\n    )\r\n}\r\n\r\nexport default RutaPrivada;\r\n","import React from 'react';\r\n\r\nconst AdminHeader = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"!#\">Navbar</a>\r\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n                aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"!#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"!#\">Link</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"!#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n                            <a className=\"dropdown-item\" href=\"!#\">Action 1</a>\r\n                            <a className=\"dropdown-item\" href=\"!#\">Action 2</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default AdminHeader;\r\n","import React from 'react';\r\n\r\nconst AdminDashboardScreen = () => {\r\n    return (\r\n        <div>\r\n            MOSTRANDO LA VISTA ADMIN DASHBOARD SCREEN\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardScreen;\r\n","import React from 'react';\r\n\r\nconst AdminPedidosScreen = () => {\r\n    return (\r\n        <div>\r\n            MOSTRANDO LA VISTA DE LOS PEDIDOS SCREEN\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPedidosScreen;\r\n","export const URL_BACKEND = \"https://codigo4-pos.herokuapp.com\";","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getPlatos = async () => {\r\n    const peticion = await fetch(`${URL_BACKEND}/plato`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const postPlatoSinImagen = async (objPlato) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/plato`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objPlato),\r\n    });\r\n\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const postImagenByPlatoId = async (plato_id, archivo) => {\r\n\r\n    // creamos unformulario dentro de uan variable\r\n    // plato_id e imagen son las llaves que recibira el backend\r\n    let formData = new FormData();\r\n    formData.append(\"plato_id\", plato_id);\r\n    formData.append(\"imagen\", archivo);\r\n\r\n    const peticion = await fetch(`${URL_BACKEND}/imagen/upload`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n    });\r\n    \r\n    const data = await peticion.json();\r\n    return data;\r\n};","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getCategorias = async () => {\r\n    const peticion = await fetch(`${URL_BACKEND}/categoria`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const getPlatosByCategoriaId = async (categoria_id) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/categoria/${categoria_id}/platos`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { getCategorias } from '../../../../../services/categoriasServices';\r\nimport { postImagenByPlatoId, postPlatoSinImagen } from '../../../../../services/platosServices';\r\n\r\nconst formularioVacio = {\r\n    plato_nom: \"\",\r\n    plato_pre: 0,\r\n    categoria_id: 0,\r\n}\r\n\r\nconst AdminPlatosForm = ({ traerPlatos }) => {\r\n\r\n    const [formulario, setFormulario] = useState(formularioVacio);\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    /**\r\n     * archivoRef sera una variable que puede ser usada para tomar un elemento delDOM, \r\n     * es decir, vincular un elemento del DOM con una variable (como un getElementByID)\r\n     * NOTA: el elemento vinculado del DOM se encontrara en el objeto:\r\n     * archivoRef.current\r\n     * archivoRef.classList(\"nombre_de_la_clase\");\r\n     */\r\n    const archivoRef = useRef();\r\n\r\n    const traerCategorias = async () => {\r\n        const data = await getCategorias();\r\n        if (data.ok) {\r\n            setCategorias(data.content);\r\n        }\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormulario({\r\n            ...formulario,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // allowOutsideClick, deniega el derecho de hacer clic fuera del cuadro de sweetalert.\r\n        // la unica forma de cerrar este sweetalert, sera lanzando otro sweetalert que si pueda cancelar o cerrar\r\n        Swal.fire({\r\n            title: \"Espere...\",\r\n            text: \"Estamos subiendo la informacion al servidor\",\r\n            icon: \"info\",\r\n            showConfirmButton: false,\r\n            allowOutsideClick: false,\r\n        });\r\n\r\n\r\n        // console.log(archivoRef.current); // es parecido a hacer let archivo = document.getElementByID(\"id_del_input\"); console.log(archivo)\r\n\r\n        const objPlato = {\r\n            ...formulario,\r\n            plato_img: \"\",\r\n        };\r\n\r\n        postPlatoSinImagen(objPlato).then(data => {\r\n            if (data.ok) {\r\n                const plato_id = data.content.plato_id;\r\n\r\n                //current.files[0], siempre es asi para type files\r\n                postImagenByPlatoId(plato_id, archivoRef.current.files[0]).then(\r\n                    rpta => {\r\n                        // console.log(rpta);\r\n                        if (rpta.ok) {\r\n                            setFormulario(formularioVacio);\r\n                            traerPlatos();\r\n\r\n                            // quitar la imagen del input file\r\n                            archivoRef.current.value = \"\";\r\n\r\n                            Swal.fire({\r\n                                title: \"Hecho!\",\r\n                                icon: \"success\",\r\n                                text: \"El plato y su imagen fueron creados con exito\",\r\n                                timer: 1500,\r\n                                showConfirmButton: false,\r\n                            });\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        traerCategorias();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"row mb-4\">\r\n            <div className=\"col\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Nombre del Plato</label>\r\n                                <input type=\"text\" placeholder=\"Ejm: Cebiche\"\r\n                                    className=\"form-control\"\r\n                                    value={formulario.plato_nom}\r\n                                    name=\"plato_nom\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Precio del Plato:</label>\r\n                                <input type=\"number\" className=\"form-control\"\r\n                                    value={formulario.plato_pre}\r\n                                    name=\"plato_pre\"\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Seleccione Categoría</label>\r\n                                <select name=\"\" className=\"form-control\"\r\n                                    value={formulario.categoria_id}\r\n                                    name=\"categoria_id\"\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <option value=\"0\">--Seleccione Categoría--</option>\r\n                                    {\r\n                                        categorias.map(categoria => {\r\n                                            return <option key={categoria.categoria_id} value={categoria.categoria_id}>{categoria.categoria_nom}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"\">Subir imagen del plato</label>\r\n\r\n                                {/* ref es una propiedad de todo elemento del DOM de REACT\r\n                                para relacionar una variable creada con useref()para su manipluacion*/}\r\n                                <input type=\"file\" name=\"\" id=\"\" className=\"form-control\" ref={archivoRef} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">Crear Plato</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPlatosForm;\r\n","import React from 'react';\r\n\r\nconst AdminPlatosTabla = ({ platos }) => {\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"card shadow\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-hover table-bordered table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Id</th>\r\n                                        <th>Nombre</th>\r\n                                        <th>Precio</th>\r\n                                        <th>Imagen Plato</th>\r\n                                        <th>Categoria</th>\r\n                                        <th>Acciones</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        platos.map(plato => (\r\n                                            <tr key={plato.plato_id}>\r\n                                                <td>{plato.plato_id}</td>\r\n                                                <td>{plato.plato_nom}</td>\r\n                                                <td>{plato.plato_pre}</td>\r\n                                                <td>\r\n                                                    <img src={plato.plato_img} alt=\"imagen del plato\" width=\"150\" />\r\n                                                </td>\r\n                                                <td>{plato.Categorium.categoria_nom}</td>\r\n                                                <td>Acciones</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPlatosTabla;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getPlatos } from '../../../../services/platosServices';\r\nimport AdminPlatosForm from './components/AdminPlatosForm';\r\nimport AdminPlatosTabla from './components/AdminPlatosTabla';\r\n\r\nconst AdminPlatosScreen = () => {\r\n\r\n    const [platos, setPlatos] = useState([]);\r\n\r\n    const traerPlatos = async () => {\r\n        const data = await getPlatos();\r\n        if (data.ok) {\r\n            setPlatos(data.content);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        traerPlatos();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <AdminPlatosForm traerPlatos={traerPlatos} />\r\n            <AdminPlatosTabla platos={platos} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminPlatosScreen;\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport RutaPrivada from '../../RutaPrivada';\r\nimport AdminHeader from './components/AdminHeader';\r\nimport AdminDashboardScreen from './screens/dashboard/AdminDashboardScreen';\r\nimport AdminPedidosScreen from './screens/pedidos/AdminPedidosScreen';\r\nimport AdminPlatosScreen from './screens/platos/AdminPlatosScreen';\r\n\r\nconst AdminRouter = () => {\r\n    return (\r\n        <>\r\n            <AdminHeader />\r\n\r\n            <main className=\"container pt-5\">\r\n                <Switch>\r\n                    <RutaPrivada path={\"/admin/platos\"} componente={AdminPlatosScreen}/> {/* le enviamos las props: path y componente */}\r\n                    {/* <Route path={\"/admin/platos\"} component={AdminPlatosScreen} /> */}\r\n                    <Route path={\"/admin/pedidos\"} component={AdminPedidosScreen} />\r\n                    <Route path={\"/admin\"} component={AdminDashboardScreen} />  {/* la ruta mas general va abajo */}\r\n                </Switch>\r\n            </main>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminRouter;\r\n","import { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const postLogin = async (correo, password) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/login`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            correo: correo,\r\n            password: password,\r\n        }),\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n\r\n    const data = await peticion.json();\r\n    return data;\r\n};\r\n\r\nexport const verificarToken = async (token) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/verificar`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`,\r\n        },\r\n    });\r\n\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import React, { useContext, useState } from 'react';\r\nimport { postLogin } from '../../../../services/authServices';\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\nconst AuthLoginScreen = ({ history }) => {\r\n\r\n    // history nos ayuda a navegar por el hisotrial de las paginas\r\n\r\n    const { iniciarSesion } = useContext(AuthContext);\r\n\r\n    const [formulario, setFormulario] = useState({\r\n        correo: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormulario({\r\n            ...formulario,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        postLogin(formulario.correo, formulario.password).then(data => {\r\n            // console.log(data);\r\n\r\n            if (data.ok) {\r\n                // TODO llamar a iniciarSesion del context y enviarle el token\r\n                iniciarSesion(data.token);\r\n\r\n                history.push(\"pos/control\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <main className=\"login\">\r\n            <div className=\"login__form\">\r\n                <h1>Inicio de Sesión</h1>\r\n                <form className=\"formulario\" onSubmit={onSubmit}>\r\n                    <label htmlFor=\"\">Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Email\"\r\n                        name=\"correo\"\r\n                        value={formulario.correo}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <label htmlFor=\"\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"formulario__input\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={formulario.password}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <button className=\"formulario__submit\" type=\"submit\">\r\n                        Iniciar Sesión\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AuthLoginScreen;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AuthLoginScreen from './screens/login/AuthLoginScreen';\r\n\r\nimport \"./../../sass/login.scss\";\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/auth\"} component={AuthLoginScreen} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AuthRouter;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst InvitadoHomeScreen = () => {\r\n    return (\r\n        <div className=\"bg-dark\" style={{\r\n            minHeight: \"100vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n        }}>\r\n            <h1 className=\"display-1 text-white\">Home de CodiGo - POS</h1>\r\n            <Link className=\"btn btn-outline-success btn-lg\" to={\"/auth\"}>ir al Login</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvitadoHomeScreen;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport InvitadoHomeScreen from './screens/home/InvitadoHomeScreen';\r\n\r\nconst InvitadoRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/\"} exact component={InvitadoHomeScreen} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default InvitadoRouter;\r\n","import { createContext } from \"react\";\r\n\r\nconst MesaContext = createContext();\r\n\r\nexport default MesaContext;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { getCategorias } from '../../../services/categoriasServices';\r\nimport MesaContext from '../context/mesa/MesaContext';\r\n\r\nconst PosCategorias = () => {\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n    // solo necesitaremos lo siguiente de todo el contexto disponible\r\n    const { globalObjCategoria, seleccionarCategoriaGlobal } = useContext(MesaContext);\r\n\r\n    const traerCategorias = async () => {\r\n        const data = await getCategorias();\r\n        if (data.ok) {\r\n            setCategorias(data.content);\r\n            setCargando(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        traerCategorias();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"carta__categorias\">\r\n            {\r\n                cargando ? <span>cargando...</span> :\r\n                    categorias.map(objCategoria => (\r\n                        <button\r\n                            key={objCategoria.categoria_id}\r\n                            className={`boton boton-outline-primary ${globalObjCategoria?.categoria_id === objCategoria.categoria_id ? \"activo\" : \"\"}`}\r\n                            onClick={() => { seleccionarCategoriaGlobal({ ...objCategoria }) }}\r\n                        >\r\n                            {objCategoria.categoria_nom}\r\n                        </button>\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosCategorias;\r\n","import React from 'react'\r\n\r\nconst PosComandaItem = ({ plato }) => {\r\n    return (\r\n        <li className=\"comanda__item\">\r\n            <p className=\"comanda__nombre\">\r\n                <span><strong>{plato.plato_nom}</strong></span>\r\n                <span>Precio: S/ {+plato.plato_pre}</span>\r\n            </p>\r\n            <p className=\"comanda__cantidad\">{+plato.plato_cant}</p>\r\n            <p className=\"comanda__precio\">\r\n                <strong>S/ {+plato.plato_cant * +plato.plato_pre}</strong>\r\n            </p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PosComandaItem;\r\n","import React, { useContext } from 'react';\r\nimport MesaContext from '../context/mesa/MesaContext';\r\nimport PosComandaItem from './PosComandaItem';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst PosComanda = () => {\r\n\r\n    const { globalPedidos, globalObjMesa, globalPagar } = useContext(MesaContext);\r\n\r\n    let pedidoActual;\r\n\r\n    // no usamos filter, pues nos devolvera un arreglo vacio en caso no haya coincidencia\r\n    // en cambio, find, me retorna undefined si no encuentra coincidencia\r\n    if (globalObjMesa) {\r\n        pedidoActual = globalPedidos.find(pedido => pedido.mesa_id === globalObjMesa.mesa_id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"comanda\">\r\n            <h4 className=\"comanda__mesa\">Mesa 01</h4>\r\n            <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n            <hr />\r\n\r\n            <ul className=\"comanda__lista\">\r\n\r\n                {\r\n                    globalObjMesa ?\r\n                        pedidoActual ?\r\n                            pedidoActual.platos.map(plato => {\r\n                                return <PosComandaItem key={plato.plato_id} plato={plato} />\r\n                            })\r\n                            :\r\n                            <span>Esta mesa no tiene pedidos</span>\r\n                        :\r\n                        <span>No se ha seleccionado ninguna mesa</span>\r\n                }\r\n\r\n            </ul>\r\n\r\n            <button\r\n                className=\"boton boton-success boton-block\"\r\n                onClick={() => {\r\n                    if (!globalObjMesa) return;\r\n\r\n                    Swal.fire({\r\n                        title: \"Confirmar pago\",\r\n                        text: \"Los cambios se haran efecto en la base de datos\",\r\n                        icon: \"question\",\r\n                        showCancelButton: true,\r\n                    }).then(({ isConfirmed }) => {\r\n                        if (isConfirmed) {\r\n                            globalPagar();\r\n                        }\r\n\r\n                        // si isConfirmed es true, entonces ejecutar globalPagar()\r\n                        // isConfirmed && globalPagar();\r\n                    });\r\n\r\n                }}\r\n            >\r\n                PAGAR\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosComanda;\r\n","export default __webpack_public_path__ + \"static/media/logo.32d5c4da.svg\";","export default __webpack_public_path__ + \"static/media/search.c031f9ef.svg\";","import React, { useContext } from 'react';\r\nimport AuthContext from '../../auth/context/AuthContext';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport logoSVG from \"./../../../assets/img/logo.svg\";\r\nimport searchSVG from \"./../../../assets/img/search.svg\";\r\n\r\nconst PosHeader = ({ history }) => {\r\n\r\n    const { usu_nom, cerrarSesion } = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo\">\r\n                <img src={logoSVG} alt=\"\" />\r\n            </div>\r\n            <div className=\"header__buscador\">\r\n                <img src={searchSVG} alt=\"\" />\r\n                <input type=\"text\" className=\"header__input\" placeholder=\"Busca un término\" />\r\n            </div>\r\n            <div className=\"header__usuario\">\r\n                <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n                <span>{usu_nom}</span>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={() => {\r\n                        cerrarSesion();\r\n                        history.replace(\"/\");\r\n                    }}\r\n                >\r\n                    Cerrar Sesión\r\n                </button>\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default withRouter(PosHeader);\r\n\r\n// withRouter, para recibir las propiedades de navegacion\r\n// history.replace(\"/\"); para que no quede historial de mi navegacion.\r\n","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getMesas = async () => {\r\n    const peticion = await fetch(`${URL_BACKEND}/mesa`);\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import React, { useContext } from 'react'\r\nimport MesaContext from '../context/mesa/MesaContext';\r\n\r\nconst PosMesa = ({ objMesa }) => {\r\n\r\n    // consumir un contexto\r\n    const { globalObjMesa, seleccionarMesaGlobal } = useContext(MesaContext);\r\n    // console.log(globalObjMesa);\r\n\r\n    return (\r\n        // globalObjMesa?, significa: preguntar si es que el objeto tuviese la propiedad mesa_id\r\n        // se llama operador optional\r\n        \r\n        <li className={`mesas__mesa ${globalObjMesa?.mesa_id === objMesa.mesa_id ? \"activo\" : \"\"}`}\r\n            onClick={() => {\r\n                seleccionarMesaGlobal({ ...objMesa })\r\n            }}>\r\n            <span className=\"mesas__titulo\">Mesa</span>\r\n            <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PosMesa;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getMesas } from '../../../services/mesasServices';\r\nimport PosMesa from './PosMesa'\r\n\r\nconst PosMesas = () => {\r\n\r\n    const [mesas, setMesas] = useState([]);\r\n    const [cargando, setCargando] = useState(true);\r\n\r\n    const traerMesas = async () => {\r\n        const rpta = await getMesas();\r\n        if (rpta.ok) {\r\n            setMesas(rpta.content);\r\n            setCargando(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        traerMesas();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"mesas\">\r\n            <ul className=\"mesas__lista\">\r\n\r\n                {\r\n                    cargando ? <span>cargando...</span> :\r\n                        mesas.map(objMesa => (\r\n                            <PosMesa key={objMesa.mesa_id} objMesa={objMesa} />\r\n                        ))\r\n                }\r\n\r\n            </ul>\r\n            <div className=\"mesas__info\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosMesas\r\n","export default __webpack_public_path__ + \"static/media/plato_blanco.255e60bc.svg\";","import React from 'react';\r\n\r\nimport platoSVG from \"./../../../assets/img/plato_blanco.svg\";\r\n\r\nconst PosNavigation = () => {\r\n    return (\r\n        <nav className=\"menu\">\r\n            <ul className=\"menu__lista\">\r\n                <li>\r\n                    <img src={platoSVG} alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n                <li>\r\n                    <img src={platoSVG} alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n                <li>\r\n                    <img src={platoSVG} alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n                <li>\r\n                    <img src={platoSVG} alt=\"\" />\r\n                    <span>Bebidas</span>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default PosNavigation;\r\n","import React, { useContext } from 'react'\r\nimport MesaContext from '../context/mesa/MesaContext';\r\n\r\nconst PosPlato = ({ objPlato }) => {\r\n\r\n    const { agregarPlato, restarPlato } = useContext(MesaContext);\r\n\r\n    return (\r\n        <div className=\"carta__plato\">\r\n            <img\r\n                src={objPlato.plato_img}\r\n                alt=\"imagen del plato\" />\r\n            <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n            <span className=\"carta__precio\">S/ {objPlato.plato_pre}</span>\r\n            <div className=\"carta__botones\">\r\n                <button className=\"boton boton-outline-primary boton-restar\"\r\n                    onClick={() => {\r\n                        restarPlato({ ...objPlato })\r\n                    }}>\r\n                    -1\r\n                </button>\r\n                \r\n                <button\r\n                    className=\"boton boton-outline-primary boton-sumar\"\r\n                    onClick={() => {\r\n                        agregarPlato({ ...objPlato })\r\n                    }}>\r\n                    +1\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosPlato;\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { getPlatosByCategoriaId } from '../../../services/categoriasServices';\r\nimport MesaContext from '../context/mesa/MesaContext';\r\nimport PosPlato from './PosPlato'\r\n\r\nconst PosPlatos = () => {\r\n\r\n    const { globalObjCategoria } = useContext(MesaContext);\r\n\r\n    const [platos, setPlatos] = useState([]);\r\n\r\n    const traerPlatosPorCategoriaId = async (categoria_id) => {\r\n        const data = await getPlatosByCategoriaId(categoria_id);\r\n        setPlatos(data.content.Platos);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (globalObjCategoria !== null) {\r\n            traerPlatosPorCategoriaId(globalObjCategoria.categoria_id);\r\n        }\r\n\r\n    }, [globalObjCategoria]); // useEffect se ejecuta nuevamente cuando cambie la variable globalObjCategoria\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"carta__platos\">\r\n\r\n            {\r\n                platos.map(objPlato => {\r\n                    return <PosPlato key={objPlato.plato_id} objPlato={objPlato} />\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PosPlatos;\r\n","import React from 'react'\r\nimport PosCategorias from '../../components/PosCategorias';\r\nimport PosComanda from '../../components/PosComanda';\r\nimport PosHeader from '../../components/PosHeader';\r\nimport PosMesas from '../../components/PosMesas';\r\nimport PosNavigation from '../../components/PosNavigation';\r\nimport PosPlatos from '../../components/PosPlatos';\r\n\r\nconst PosControlScreen = () => {\r\n    return (\r\n        <>\r\n            <PosHeader />\r\n            <main className=\"pos-container\">\r\n                <PosNavigation />\r\n                <section className=\"tabla\">\r\n                    <PosMesas />\r\n                    <div className=\"pedido\">\r\n                        <div className=\"carta\">\r\n                            <PosCategorias />\r\n                            <PosPlatos />\r\n                        </div>\r\n                        <div className=\"boleta\">\r\n                            <h3>Pedido</h3>\r\n                            <PosComanda />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PosControlScreen;\r\n","const MesaReducer = (stateActual, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"SELECCIONAR_MESA\":\r\n            return {\r\n                ...stateActual,\r\n                globalObjMesa: { ...action.data },\r\n            }\r\n\r\n        case \"SELECCIONAR_CATEGORIA\":\r\n            return {\r\n                ...stateActual,\r\n                globalObjCategoria: { ...action.data },\r\n            }\r\n\r\n        case \"ACTUALIZAR_GLOBAL_PEDIDOS\":\r\n            return {\r\n                ...stateActual,\r\n                globalPedidos: [ ...action.data ],\r\n            }\r\n    }\r\n};\r\n\r\nexport default MesaReducer;\r\n\r\n/**\r\n * stateActual, es el estado actual de la variable de estado que se quiere modificar, que viene del MesaState.\r\n * action, es lo que se recibe del dispatch que se encuentra en MesaState.\r\n * TODO lo que retorna MesaReducer es el nuevo valor o valor de reemplazo de mi variable de estado.\r\n */","import { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const postPedido = async (objPedido) => {\r\n    const peticion = await fetch(`${URL_BACKEND}/pedido`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(objPedido),\r\n    });\r\n    const data = await peticion.json();\r\n    return data;\r\n};","import React, { useReducer } from 'react'\r\nimport MesaContext from './MesaContext';\r\nimport MesaReducer from './MesaReducer';\r\nimport moment from \"moment\";\r\nimport { postPedido } from '../../../../services/pedidosServices';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst MesaState = (props) => {\r\n\r\n    const [state, dispatch] = useReducer(MesaReducer, {\r\n        globalObjMesa: null,\r\n        globalObjCategoria: null,\r\n        globalPedidos: [],\r\n    });\r\n\r\n    // funcion que se ejecutara con el boton +1 de cualquier plato\r\n    const agregarPlato = (objPlato) => {\r\n\r\n        // desestructurando state\r\n        const { globalObjMesa, globalPedidos } = state;\r\n\r\n        //verificar que tenemos una mesa seleccionada globalmente\r\n        if (globalObjMesa === null) return;\r\n\r\n        // obtener el pedido actual, que pertenece a la mesa global seleccionada en el arreglo global pedidos\r\n        // en  el arreglo globalPedidos, no pueden haber 2 pedidos con el mismo mesa_id\r\n        const pedidoActual = globalPedidos.find(objPedido => objPedido.mesa_id === globalObjMesa.mesa_id);\r\n\r\n        // preguntamos si el pedido actual existe, es decir, que la mesa global seleccionada tenga un pedido previamnete en nuestro arreglo \"globalPedidos\"\r\n        if (pedidoActual) {\r\n            // la mesa global seleccionada, ya tenia un pedido\r\n\r\n            // vamos a verificar si la mesa seleccionada ya tenia el plato que estamos recibiendo por parametros\r\n            const platoExistente = pedidoActual.platos.find(plato => plato.plato_id === objPlato.plato_id);\r\n            if (platoExistente) {\r\n                // el plato que quiero aumentar ya exisitia en el pedido de la mesa actual\r\n                const nuevoGlobalPedidos = globalPedidos.map(pedido => {\r\n                    if (pedido.mesa_id === globalObjMesa.mesa_id) {\r\n                        pedido.platos.map(plato => {\r\n                            if (plato.plato_id === objPlato.plato_id) {\r\n                                plato.plato_cant++;\r\n                            }\r\n                            return plato;\r\n                        });\r\n                    }\r\n                    return pedido;\r\n                });\r\n\r\n                dispatch({\r\n                    type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                    data: nuevoGlobalPedidos,\r\n                });\r\n\r\n            } else {\r\n                // la mesa tenia pedidos,pero no tenia ninguna unidad del plato que quiero agregar\r\n                //1. mapeando el arreglo global de pedidos\r\n                const nuevoGlobalPedidos = globalPedidos.map(pedido => {\r\n                    // 2. cuando encuentre el pedido de la mesa actual seleccionada\r\n                    if (pedido.mesa_id === globalObjMesa.mesa_id) {\r\n                        //3. cuando encuentro el pedido de la mesa seleccionada, a su arreglo de platos, le agrego el nuevo plato con una unidad\r\n                        pedido.platos.push({\r\n                            ...objPlato,\r\n                            plato_cant: 1,\r\n                        });\r\n                    }\r\n                    return pedido;\r\n                });\r\n\r\n                dispatch({\r\n                    type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                    data: nuevoGlobalPedidos,\r\n                });\r\n            }\r\n\r\n        } else {\r\n            //la mesa global seleccionada, no tenia un pedido. Estaba vacia.\r\n            // Por tanto, debemos de crear el pedido nuevo, en el arreglo global de pedidos con la mesa global seleccionada y el plato \"objPlato\" con cantidad = 1\r\n            const nuevoGlobalPedidos = [\r\n                ...globalPedidos,\r\n                {\r\n                    total: objPlato.plato_pre,\r\n                    mesa_id: globalObjMesa.mesa_id,\r\n                    platos: [\r\n                        {\r\n                            ...objPlato,\r\n                            plato_cant: 1,\r\n                        },\r\n                    ],\r\n                },\r\n            ];\r\n\r\n            dispatch({\r\n                type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                data: nuevoGlobalPedidos,\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    // funcion que se ejecutara con el boton -1 de cualquier plato\r\n    const restarPlato = (objPlato) => {\r\n\r\n        let { globalPedidos, globalObjMesa } = state;\r\n        if (globalObjMesa === null) return;\r\n\r\n        // buscamos un pedido que corresponda a la mesa seleccionada global\r\n        let pedidoActual = globalPedidos.find(pedido => pedido.mesa_id === globalObjMesa.mesa_id);\r\n        if (pedidoActual) {\r\n            // significa que si existe un pedido para la mesa actual\r\n\r\n\r\n            // Ahora, verificamos si el plato que estoy restando, existe en el arreglo de platos del pedido actual\r\n            pedidoActual.platos = pedidoActual.platos.filter(plato => {\r\n                if (plato.plato_id === objPlato.plato_id) {\r\n                    // significa que encontre el plato que estoytratando de restar\r\n                    // Ahora analozaremos si el plato solo tenia unitem otenia mas items\r\n                    if (plato.plato_cant === 1) {\r\n                        // Cuando estamos dentro del metodo filter, retornar undefined es como no retornar elemento.\r\n                        // dejamos de retornar el plato de la lista de platos\r\n                        return undefined;\r\n                    } else {\r\n                        plato.plato_cant--;\r\n                        return plato;\r\n                    }\r\n                }\r\n                return plato;\r\n            });\r\n\r\n            //luego de descontar un plato, cabe la posibilidad de que el arreglo de platos del pedido actual de la mesa seleccionada ya no tenga elementos (platos).\r\n            // de ser el caso, con la siguiente instruccion eliminamos a ese pedido del arregloglobal de pedidos,para evitar que la mesa tenga un pedido con 0 platos\r\n            if (pedidoActual.platos.length === 0) {\r\n                globalPedidos = globalPedidos.filter(pedido => pedido.mesa_id !== globalObjMesa.mesa_id);\r\n            }\r\n\r\n            dispatch({\r\n                type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                data: globalPedidos,\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const seleccionarMesaGlobal = (objMesa) => {\r\n        dispatch({\r\n            type: \"SELECCIONAR_MESA\",\r\n            data: { ...objMesa },\r\n        });\r\n    };\r\n\r\n    const seleccionarCategoriaGlobal = (objCategoria) => {\r\n        dispatch({\r\n            type: \"SELECCIONAR_CATEGORIA\",\r\n            data: { ...objCategoria },\r\n        });\r\n    };\r\n\r\n    const globalPagar = () => {\r\n\r\n        const pedidoActual = state.globalPedidos.find(pedido => state.globalObjMesa.mesa_id === pedido.mesa_id);\r\n        const pedidoPlatos = pedidoActual.platos.map(plato => (\r\n            {\r\n                plato_id: plato.plato_id,\r\n                pedidoplato_cant: plato.plato_cant,\r\n            }\r\n        ));\r\n\r\n        const objPedido = {\r\n            usu_id: 1,\r\n            mesa_id: state.globalObjMesa.mesa_id,\r\n            pedido_est: \"pagado\",\r\n            pedido_nro: \"100\",\r\n            pedido_fech: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            pedidoplatos: pedidoPlatos,\r\n        }\r\n\r\n        // console.log(objPedido);\r\n\r\n        postPedido(objPedido).then(data => {\r\n            console.log(data);\r\n\r\n            if (data.ok) {\r\n\r\n                Swal.fire({\r\n                    title: \"Pago Registrado!\",\r\n                    text: \"El pago se ha realizado exitosamente\",\r\n                    icon: \"success\",\r\n                    timer: 1500,\r\n                    showConfirmButton: false,\r\n                });\r\n\r\n                const nuevoGlobalPedidos = state.globalPedidos.filter(pedido => pedido.mesa_id !== state.globalObjMesa.mesa_id);\r\n\r\n                dispatch({\r\n                    type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n                    data: nuevoGlobalPedidos,\r\n                });\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <MesaContext.Provider value={{\r\n            globalObjMesa: state.globalObjMesa,\r\n            globalObjCategoria: state.globalObjCategoria,\r\n            globalPedidos: state.globalPedidos,\r\n            seleccionarMesaGlobal: seleccionarMesaGlobal,\r\n            seleccionarCategoriaGlobal: seleccionarCategoriaGlobal,\r\n            agregarPlato: agregarPlato,\r\n            restarPlato: restarPlato,\r\n            globalPagar: globalPagar,\r\n        }}>\r\n\r\n            {props.children}\r\n\r\n        </MesaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MesaState;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport PosControlScreen from './screens/control/PosControlScreen';\r\nimport MesaState from './context/mesa/MesaState';\r\nimport RutaPrivada from '../../RutaPrivada';\r\n\r\nimport \"./../../sass/pos.scss\";\r\n\r\nconst PosRouter = () => {\r\n    return (\r\n        <MesaState>\r\n            <Switch>\r\n                <RutaPrivada path={\"/pos/control\"} componente={PosControlScreen} />\r\n            </Switch>\r\n        </MesaState>\r\n    )\r\n}\r\n\r\nexport default PosRouter;\r\n\r\n// PosRouter realizará el subenrutamiento. Ya no necesita de <Router>, pues solo debe de haber uno.","import React from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport AdminRouter from './modules/admin/AdminRouter';\r\nimport AuthRouter from './modules/auth/AuthRouter';\r\nimport InvitadoRouter from './modules/invitado/InvitadoRouter';\r\nimport PosRouter from './modules/pos/PosRouter';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <HashRouter basename=\"/codigo4-pos-front\">\r\n            <Switch>\r\n                <Route path={\"/pos\"} component={PosRouter} />\r\n                <Route path={\"/admin\"} component={AdminRouter} />\r\n                <Route path={\"/auth\"} component={AuthRouter} />\r\n                <Route path={\"/\"} exact component={InvitadoRouter} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n\r\n// AppRouter sera el enrutador global de toda la aplicacion\r\n// HashRouter para proyectos q trabajan en una subruta\r\n","const AuthReducer = (stateActual, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"INICIAR_SESION\":\r\n            return {\r\n                ...stateActual,\r\n                usu_id: action.data.usu_id,\r\n                usu_nom: action.data.usu_nom,\r\n                token: action.data.token,\r\n                autenticado: true,\r\n                cargando: false,\r\n            }\r\n\r\n        case \"CERRAR_SESION\":\r\n            return {\r\n                ...stateActual,\r\n                usu_id: null,\r\n                usu_nom: null,\r\n                token: null,\r\n                autenticado: false,\r\n                cargando: false,\r\n            }\r\n    }\r\n};\r\n\r\nexport default AuthReducer;","import React, { useEffect, useReducer } from 'react';\r\nimport { verificarToken } from '../../../services/authServices';\r\nimport AuthContext from './AuthContext';\r\nimport AuthReducer from './AuthReducer';\r\n\r\nconst AuthState = (props) => {\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, {\r\n        autenticado: false,\r\n        usu_nom: null,\r\n        usu_id: null,\r\n        token: null,\r\n        cargando: true,\r\n    });\r\n\r\n    const iniciarSesionConLocalStorage = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (token) {\r\n            // verificar el token con el backend\r\n            verificarToken(token).then(data => {\r\n                console.log(data);\r\n\r\n                if (data.ok) {\r\n                    const payload = token.split(\".\")[1];\r\n                    const payloadDesencriptado = window.atob(payload);\r\n                    const payloadJSON = JSON.parse(payloadDesencriptado);\r\n\r\n                    dispatch({\r\n                        type: \"INICIAR_SESION\",\r\n                        data: {\r\n                            ...payloadJSON,\r\n                            token: token,\r\n                        },\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: \"CERRAR_SESION\",\r\n                    });\r\n                }\r\n\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: \"CERRAR_SESION\",\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        iniciarSesionConLocalStorage();\r\n    }, []);\r\n\r\n    /**\r\n     * Funcion que sera llamada desde el formulario, luego de que el iniciode sesionsea correcto.\r\n     * Esta funcionrecibira el token y actualizara el estado global conla informacion del usuario\r\n     */\r\n    const iniciarSesion = (token) => {\r\n        /**\r\n         * la funcion split devuelve un arreglo de subcadenas dado el separador\r\n         * ejem:\r\n         * 1235dfdfdf.dgfgfgd.sdde\r\n         * resultado: [\"1235dfdfdf\", \"dgfgfgd\", \"sdde\"]\r\n         */\r\n\r\n        const payload = token.split(\".\")[1];\r\n        // console.log(token);\r\n        // console.log(payload);\r\n\r\n        // vamos a desencriptar el payload que esta en base-64\r\n        // window.atob(\"cadenaencriptada\") desencripta una cadena en base-64\r\n\r\n        const payloadDesencriptado = window.atob(payload);\r\n        console.log(payloadDesencriptado);\r\n\r\n        const payloadJSON = JSON.parse(payloadDesencriptado);\r\n        console.log(payloadJSON);\r\n\r\n        localStorage.setItem(\"token\", token);\r\n\r\n        dispatch({\r\n            type: \"INICIAR_SESION\",\r\n            data: {\r\n                ...payloadJSON,\r\n                token: token,\r\n            },\r\n        });\r\n    };\r\n\r\n    const cerrarSesion = () => {\r\n        dispatch({\r\n            type: \"CERRAR_SESION\",\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            usu_nom: state.usu_nom,\r\n            usu_id: state.usu_id,\r\n            autenticado: state.autenticado,\r\n            cargando: state.cargando,\r\n            iniciarSesion: iniciarSesion,\r\n            cerrarSesion: cerrarSesion,\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;\r\n","import React from 'react'\nimport AppRouter from './AppRouter'\nimport AuthState from './modules/auth/context/AuthState'\n\nconst App = () => {\n  return (\n    <AuthState>\n      <AppRouter />\n    </AuthState>\n\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}